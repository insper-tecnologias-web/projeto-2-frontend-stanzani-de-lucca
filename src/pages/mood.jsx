import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";

import { Zap } from "lucide-react";

import playlist from "@/services/playlists";
import moods from "@/constants/moods";

import SpotifyIcon from "@/assets/spotify.png";

import Breadcrumbs from "@/components/breadcrumbs";
import { Button } from "@/components/ui/button";
import ErrorCard from "@/components/error-card";
import Container from "@/components/container";
import Track from "@/components/track";

const Mood = () => {
  const { mood: slug } = useParams();
  const mood = moods.filter((mood) => mood.slug === slug)[0];

  if (!mood) {
    return <div></div>;
  }

  const [showAddToSpotifyButton, setShowAddToSpotifyButton] = useState(false);
  const [showError, setShowError] = useState(false);
  const [tracks, setTracks] = useState(null);

  useEffect(() => {
    playlist
      .get(mood.slug)
      .then((data) => {
        setTracks(data);
        setShowAddToSpotifyButton(true);
      })
      .catch((error) => {
        setShowError(true);
      });
  }, []);

  return (
    <Container>
      <Breadcrumbs name={mood.name} />
      <div className="mb-2.5 flex flex-row items-center gap-2.5">
        <mood.icon className={mood.color} size={44} />
        <h1 className="scroll-m-20 text-4xl font-semibold tracking-tight lg:text-5xl">
          {mood.name}
        </h1>
      </div>
      <p className="mb-5 text-neutral-400">
        Generated by AI and seeded with Moody's curation of tracks.
      </p>

      {showAddToSpotifyButton ? (
        <div className="mb-4 flex flex-row justify-start">
          <Button className="flex flex-row gap-2 bg-[#1DB954] hover:bg-[#1DB954]/90">
            <span>Add to Spotify</span>
            <img className="w-5" src={SpotifyIcon} alt="Spotify." />
          </Button>
        </div>
      ) : null}

      {showError ? (
        <ErrorCard />
      ) : (
        <div className="rounded-md bg-[#101010] pb-8 [&>*:nth-child(even)]:bg-[#171717] hover:[&>*:nth-child(even)]:bg-[#1D1D1D] hover:[&>*:nth-child(odd)]:bg-[#1D1D1D]">
          {tracks
            ? tracks.map((track, i) => (
                <Track key={track.id} track={track} songId={i + 1} />
              ))
            : null}
        </div>
      )}
    </Container>
  );
};

export default Mood;
